{"version":3,"sources":["components/profile/Profile.js","components/profile/ProfilePage.js","components/button/ButtonWithProps.js","components/button/ButtonWithChild.js","components/button/ButtonWithClick.js","components/button/ButtonPage.js","components/theme/ThemePage.js","components/form/FormPage.js","components/cities/CitiesPage.js","App.js","serviceWorker.js","index.js"],"names":["Profile","this","props","profileInfo","picture","name","age","hobbies","src","alt","map","element","index","key","React","Component","ProfilePage","profiles","Math","floor","random","className","profile","ButtonWithProps","buttonText","buttonStyle","style","ButtonWithChild","children","ButtonWithStyle","handleClick","event","console","log","informButtonPage","onClick","ButtonPage","handleButtonClicks","text","handleButtonChange","backgroundColor","buttonChanged","ThemePage","submitColorChange","onColorChange","state","color","history","push","type","onChange","setState","target","value","FormPage","handleChange","id","onSubmit","firstName","lastName","onUserSubmit","placeholder","CitiesPage","cities","fetch","then","response","json","city","columns","Header","accessor","data","App","handleColorChange","localStorage","setItem","handleUserSubmit","firstname","getItem","to","exact","path","component","onColorChanged","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94c00ad9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Profile extends React.Component {\r\n    render(){\r\n        const {picture ,name ,age ,hobbies} = this.props.profileInfo\r\n        \r\n        return (\r\n        <div>\r\n            <img src={picture} alt=\"MINETURTLE\"></img>\r\n            <div>Name: {name}</div>\r\n            <div>Age: {age}</div>\r\n            <div>Hobbies: </div>\r\n            {\r\n                hobbies.map((element,index)=>{\r\n                    return (<p key={\"hobbies\"+index}>{element}</p>)\r\n                })\r\n            }\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from './Profile.js';\r\n\r\nexport default class ProfilePage extends React.Component {\r\n    render() {\r\n        const hobbies = ['Gaming', 'Livestreaming', 'Knitting'];\r\n\r\n\r\n        const profile1 = {\r\n            name: 'Mineturtle',\r\n            picture: 'https://vignette.wikia.nocookie.net/youtube-battles/images/3/3a/Mine_Turtle_Vector.png/revision/latest?cb=20190604212659',\r\n            age: Math.floor(Math.random() * 100) + 1,\r\n            hobbies: hobbies\r\n        }\r\n        const profile2 = {\r\n            name: 'Kitty',\r\n            picture: 'http://placeimg.com/500/500/animals',\r\n            age: Math.floor(Math.random() * 100) + 1,\r\n            hobbies: hobbies\r\n        }\r\n\r\n        const profiles = [profile1, profile2];\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {\r\n                        profiles.map((profile,index) => {\r\n                            return <Profile key={\"profile\" + index} profileInfo={profile} />\r\n                        })\r\n                    }\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class ButtonWithProps extends React.Component{\r\n    render(){\r\n        const { buttonText, buttonStyle } = this.props;\r\n        return (\r\n            <button style={buttonStyle}>{buttonText ? buttonText : \"Submit\"} </button>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class ButtonWithChild extends React.Component{\r\n    render(){\r\n        const { children } = this.props;\r\n        return(\r\n            <button>{children}</button>\r\n        );\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class ButtonWithStyle extends React.Component{\r\n    handleClick = (event)=>{\r\n        //console.log(event);\r\n        console.log()\r\n        this.props.informButtonPage(\"Button with Click was clicked\")\r\n    }\r\n    //handleButtonChanged = ()=>{\r\n    //    this.props.buttonChanged('The Button did something')\r\n    //}\r\n    render(){\r\n        return (\r\n            <button onClick={this.handleClick} >Button with Click</button>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ButtonWithProps from './ButtonWithProps'\r\nimport ButtonWithChild from './ButtonWithChild'\r\nimport ButtonWithClick from './ButtonWithClick'\r\n\r\nexport default class ButtonPage extends React.Component{\r\n    handleButtonClicks = (text)=>{\r\n        console.log(text)\r\n    }\r\n    handleButtonChange = (text)=>{\r\n        console.log(text)\r\n    }\r\n\r\n    render(){\r\n         \r\n        return(\r\n            <p>\r\n            <ButtonWithProps informButtonPage={this.handleButtonClicks}/>\r\n            <ButtonWithProps informButtonPage={this.handleButtonClicks} buttonText=\"This is a magical text button!!\" buttonStyle={{backgroundColor:'lightblue'}} />\r\n            <ButtonWithChild>\r\n                this is a child\r\n            </ButtonWithChild>\r\n            <ButtonWithClick informButtonPage={this.handleButtonClicks} buttonChanged={this.handleButtonChange}>\r\n\r\n            </ButtonWithClick>\r\n            </p>\r\n            \r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport ButtonWithClick from '../button/ButtonWithClick'\r\n\r\nexport default class ThemePage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            color: \"\"\r\n        }\r\n    }\r\n\r\n    submitColorChange = () => {\r\n        this.props.onColorChange(this.state.color);\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <h1>Theme page</h1>\r\n\r\n                <input type=\"color\" onChange={event => this.setState({color: event.target.value})} />\r\n                <ButtonWithClick informButtonPage={this.submitColorChange} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FormPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    onSubmit = () => {\r\n        const { firstName, lastName } = this.state;\r\n\r\n        console.log(`Your first name is ${firstName}.`);\r\n        console.log(`Your last name is ${lastName}.`);\r\n\r\n        this.props.onUserSubmit({firstName, lastName});\r\n    }\r\n\r\n    render() {\r\n        const { firstName, lastName } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <input id=\"firstName\" placeholder=\"first name\" onChange={this.handleChange} value={firstName} />\r\n                <input id=\"lastName\" placeholder=\"last name\" onChange={this.handleChange} value={lastName} />\r\n                <button onClick={this.onSubmit}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactTable from 'react-table';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport 'react-table/react-table.css';\r\n\r\nexport default class CitiesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cities:[]\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://indian-cities-api-nocbegfhqg.now.sh/cities')\r\n        .then(response => response.json())\r\n        .then(cities => this.setState({cities}));\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>City</th>\r\n                        <th>State</th>\r\n                        <th>District</th>\r\n                    </tr>\r\n                        { this.state.cities.map((city, index) => {\r\n/*                             return (\r\n                                <tr key={\"cityrow\" + index}>\r\n                                    <td>{city.City}</td>\r\n                                    <td>{city.State}</td>\r\n                                    <td>{city.District}</td>\r\n                                </tr>\r\n                            ) */\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <ReactTable \r\n                    columns={[\r\n                        {\r\n                            Header: \"City\",\r\n                            accessor: \"City\"\r\n                        },\r\n                        {\r\n                            Header: \"State\",\r\n                            accessor: \"State\"\r\n                        },\r\n                        {\r\n                            Header: \"District\",\r\n                            accessor: \"District\"\r\n                        }\r\n                    ]}\r\n                    data={this.state.cities}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport ProfilePage from './components/profile/ProfilePage';\nimport ButtonPage from './components/button/ButtonPage';\nimport ThemePage from './components/theme/ThemePage';\nimport FormPage from './components/form/FormPage';\nimport CitiesPage from './components/cities/CitiesPage';\nimport {FaBeer, FaSurprise, FaSmileBeam} from 'react-icons/fa';\nimport { WiSolarEclipse, WiCloud } from 'react-icons/wi';\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      backgroundColor: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n\n  componentDidMount(){\n    const color= localStorage.getItem('backgroundColor');\n    this.setState({backgroundColor: color ? color : '#03dbfc'})\n  }\n\n  handleColorChange = (color) => {\n    this.setState({backgroundColor: color});\n    localStorage.setItem('backgroundColor', color);\n  }\n  \n  handleUserSubmit = ({firstname, lastName}) => {\n    this.setState({firstname, lastName})\n  }\n  render() {\n    const { backgroundColor, firstName, lastName} = this.state\n    return (\n      <Router>\n        <div className=\"entire-app\" style={{backgroundColor: backgroundColor}}>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/profile\">Profile</Link>\n              </li>\n              <li>\n                <Link to=\"/button\">Buttons</Link>\n              </li>\n              <li>\n                <Link to=\"/form\">Form</Link>\n              </li>\n              <li>\n                <Link to=\"/theme\">Theme</Link>\n              </li>\n              <li>\n                <Link to=\"/cities\">Cities</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route exact path=\"/\">\n            { firstName === \"\" && lastName === \"\" ? \n                  <div>Hello Stranger <FaSurprise /></div> \n                  : \n                  <div>Welcome back {firstName + \" \" + lastName} <FaSmileBeam /></div>}\n                  <FaBeer className='beer' />\n                  <WiSolarEclipse />\n                  <WiCloud />\n            </Route>\n            <Route exact path=\"/profile\" component={ProfilePage} />\n            <Route exact path=\"/button\" component={ButtonPage} />\n            <Route exact path=\"/theme\" component={(props) => <ThemePage {...props} onColorChanged={this.handleColorChange}/>} />\n            <Route exact path=\"/form\" component={(props) => <FormPage {...props} onUserSubmit={this.handleUserSubmit} />} />\n            <Route exact path=\"/cities\" component={(props) => <CitiesPage />} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}